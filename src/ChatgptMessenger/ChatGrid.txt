import {Avatar, Grid, List, ListItem, ListItemText, makeStyles} from "@material-ui/core";
import PersonIcon from "@mui/icons-material/Person";
import Grace2 from "../img/Grace2.jpeg";
import { useRef } from "react";

interface Message {
  id: number;
  sender: string;
  text: string;
}

interface Props {
  messages: Message[];
}

const useStyles = makeStyles({
  chatBubble: {
    backgroundColor: "#BED6DB",
    borderRadius: "20px",
    color: "#fff",
    padding: "10px",
    position: "relative",
    zIndex: 1,
    maxWidth: "75%",
    width: "auto",
    marginBottom: "10px",
    "&:after": {
      content: '""',
      top: "1px",
      left: "-29px",
      position: "absolute",
      border: "0px solid",
      display: "block",
      width: "38px",
      height: "26px",
      backgroundColor: "transparent",
      borderBottomLeftRadius: "50%",
      borderBottomRightRadius: "50%",
      boxShadow: "21px 9px 0px 8px #BED6DB",
    },
  },
  userBubble: {
    backgroundColor: "#8FCAE7",
    borderRadius: "20px",
    color: "#fff",
    padding: "10px",
    position: "relative",
    zIndex: 1,
    width: "auto",
    marginBottom: "10px",
    "&:after": {
      content: '""',
      top: "1px",
      right: "-29px",
      position: "absolute",
      border: "0px solid",
      display: "block",
      width: "38px",
      height: "26px",
      backgroundColor: "transparent",
      borderBottomLeftRadius: "50%",
      borderBottomRightRadius: "50%",
      boxShadow: "-21px 9px 0px 8px #8FCAE7",
    },
  },
  bubbleText: {
    padding: "10px",
    position: "relative",
    zIndex: 1,
  },
  chatAvatar: {
    marginRight: "20px",
    width: "50px",
    height: "50px",
    borderRadius: "50%",
  },
  userAvatar: {
    marginRight: "10px",
    marginLeft: "20px",
    width: "50px",
    height: "50px",
    borderRadius: "50%",
  },
  chatRow: {
    display: "flex",
    alignItems: "flex-start",
  },
  userRow: {
    display: "flex",
    justifyContent: "flex-end",
    width: "100%",
    alignItems: "flex-end"
  },
  userChatContainer: {
    maxWidth: "75%",
    display: "flex",
  },
  messagesContainer: {
    display: "flex",
    flexDirection: "column-reverse",
    maxHeight: "50vh",
    overflowY: "auto"
  }
});

const ChatGrid = ({ messages }: Props) => {
  const classes = useStyles();

  return (
    <Grid container spacing={2} style={{ padding: "5%" }}>
      <Grid item xs={12}>
        <List className={classes.messagesContainer}>
          {messages.map((message, idx) => (
            <div className={message.sender === "Grace" ? classes.chatRow : classes.userRow} key={idx}>
              {message.sender === "Grace" && <Avatar alt="Grace" src={Grace2} className={classes.chatAvatar} />}
              <div className={classes.userChatContainer}>
                <ListItem
                  key={message.id}
                  className={message.sender === "Grace" ? classes.chatBubble : classes.userBubble}
                >
                  <ListItemText primary={message.sender} secondary={message.text} className={classes.bubbleText} />
                </ListItem>
                {message.sender === "User" && (
                  <Avatar alt="User" className={classes.userAvatar}>
                    <PersonIcon />
                  </Avatar>
                )}
              </div>
            </div>
          ))}
        </List>
      </Grid>
    </Grid>
  );
};

export default ChatGrid;